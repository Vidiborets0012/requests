{"version":3,"file":"ajax.js","sources":["../src/js/ajax.js"],"sourcesContent":["// const fetchUsersBtn = document.querySelector('.btn');\n// // console.log('fetchUsersBtn:', fetchUsersBtn);\n// const userList = document.querySelector('.user-list');\n// // console.log('userList:', userList);\n\n/*\nfetchUsersBtn.addEventListener('click', () => {\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(users => {\n      // Дані від бекенда\n      console.log(users);\n\n      const markup = users\n        .map(user => {\n          return `<li>\n\t          <p><b>Name</b>: ${user.name}</p>\n\t          <p><b>Email</b>: ${user.email}</p>\n\t          <p><b>Company</b>: ${user.company.name}</p>\n\t        </li>`;\n        })\n        .join('');\n\n      userList.insertAdjacentHTML('beforeend', markup);\n    })\n    .catch(error => console.log(error));\n});\n*/\n\n/*\nfetchUsersBtn.addEventListener('click', () => {\n  fetchUsers()\n    .then(users => renderUsers(users))\n    .catch(error => console.log(error));\n});\n\nfunction fetchUsers() {\n  return fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nfunction renderUsers(users) {\n  const markup = users\n    .map(user => {\n      return `<li>\n          <p><b>Name</b>: ${user.name}</p>\n          <p><b>Email</b>: ${user.email}</p>\n          <p><b>Company</b>: ${user.company.name}</p>\n        </li>`;\n    })\n    .join('');\n  userList.insertAdjacentHTML('beforeend', markup);\n}\n*/\n\n/*\nЖиттєвий цикл AJAX-запиту\nПодія (Event): Користувач клікає на кнопку, або спрацьовує таймер.\n\nЗапит (Request): JavaScript створює та надсилає асинхронний HTTP-запит (GET, POST, PUT, DELETE) на сервер (через Fetch).\n\nСервер (Server): Сервер обробляє запит, взаємодіє з базою даних і готує відповідь (найчастіше у форматі JSON).\n\nВідповідь (Response): JavaScript отримує відповідь від сервера.\n\nПарсинг та Обробка (Parsing): JavaScript обробляє отримані дані (наприклад, перетворює JSON у JavaScript-об'єкт).\n\nОновлення DOM (Update): JavaScript оновлює лише потрібну частину HTML-сторінки, не перезавантажуючи її повністю.\n*/\n\nconst loadBtn = document.querySelector('.btn');\nconst usersList = document.querySelector('.user-list');\nconst USERS_URL = 'https://jsonplaceholder.typicode.com/users';\n\nloadBtn.addEventListener('click', handleLoadUsers);\n\nfunction handleLoadUsers() {\n  loadBtn.disabled = true; // Вимкнути кнопку під час завантаження\n\n  fetch(USERS_URL)\n    .then(response => {\n      // Крок 1: Перевірка відповіді\n      if (!response.ok) {\n        throw new Error(`Помилка: ${response.status}`);\n      }\n      // Крок 2: Парсинг JSON\n      return response.json();\n    })\n    .then(users => {\n      // Крок 3: Створення розмітки та оновлення DOM\n      const markup = users\n        .map(user => `<li>${user.name} (${user.email})</li>`)\n        .join('');\n      usersList.innerHTML = markup;\n      console.log('✅ Дані успішно завантажено та відображено.');\n    })\n    .catch(error => {\n      // Крок 4: Обробка помилок AJAX\n      console.error('❌ Виникла помилка AJAX:', error);\n      usersList.innerHTML = `<li>Помилка завантаження: ${error.message}</li>`;\n    })\n    .finally(() => {\n      // Крок 5: Завжди вмикати кнопку після завершення\n      loadBtn.disabled = false;\n    });\n}\n"],"names":["loadBtn","usersList","USERS_URL","handleLoadUsers","response","users","markup","user","error"],"mappings":"oDA+EA,MAAMA,EAAU,SAAS,cAAc,MAAM,EACvCC,EAAY,SAAS,cAAc,YAAY,EAC/CC,EAAY,6CAElBF,EAAQ,iBAAiB,QAASG,CAAe,EAEjD,SAASA,GAAkB,CACzBH,EAAQ,SAAW,GAEnB,MAAME,CAAS,EACZ,KAAKE,GAAY,CAEhB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,YAAYA,EAAS,MAAM,EAAE,EAG/C,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GAAS,CAEb,MAAMC,EAASD,EACZ,IAAIE,GAAQ,OAAOA,EAAK,IAAI,KAAKA,EAAK,KAAK,QAAQ,EACnD,KAAK,EAAE,EACVN,EAAU,UAAYK,EACtB,QAAQ,IAAI,4CAA4C,CAC9D,CAAK,EACA,MAAME,GAAS,CAEd,QAAQ,MAAM,0BAA2BA,CAAK,EAC9CP,EAAU,UAAY,6BAA6BO,EAAM,OAAO,OACtE,CAAK,EACA,QAAQ,IAAM,CAEbR,EAAQ,SAAW,EACzB,CAAK,CACL"}